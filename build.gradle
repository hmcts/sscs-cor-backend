plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.5.RELEASE'
  id 'org.springframework.boot' version '2.0.3.RELEASE'
  id 'org.owasp.dependencycheck' version '3.2.1'
  id 'com.github.ben-manes.versions' version '0.20.0'
  id 'org.sonarqube' version '2.6.2'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath

  // set your environment variables here
  // environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.10.1'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "6.5.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'
}

repositories {

  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }

  maven {
    url 'https://repo.spring.io/libs-milestone'
  }

  jcenter()
  mavenCentral()

  // jitpack should be last resort
  // see: https://github.com/jitpack/jitpack.io/issues/1939
  maven { url 'https://jitpack.io' }
}

// it is important to specify logback classic and core packages explicitly as libraries like spring boot
// enforces it's own (older) version which is not recommended.
def versions = [
  reformLogging: '3.0.1',
  springBoot: springBoot.class.package.implementationVersion,
  springHystrix: '2.0.0.RELEASE',
  springfoxSwagger: '2.9.2',
  junit: '4.12',
  restAssured: '3.1.0'
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.reformLogging
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: versions.springHystrix
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.0.1.RELEASE'
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '1.0.4'

  compile group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: '4.2.0'
  compileOnly 'org.projectlombok:lombok:1.18.2'
  compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.2.RELEASE'
  compile group: 'io.github.openfeign.form', name: 'feign-form', version: '3.4.0'

  compile group: 'uk.gov.hmcts.reform', name: 'sscs-common', version: '0.0.90'

  // Removed for now as we have an issue with some of its dependencies
  // compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix-dashboard', version: versions.springHystrix

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  testCompile group: 'junit', name: 'junit', version: versions.junit

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  integrationTestCompile "com.github.tomakehurst:wiremock:2.19.0"
  integrationTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  integrationTestCompile group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: '4.2.0'

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  functionalTestCompile group: 'junit', name: 'junit', version: versions.junit
  functionalTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  functionalTestCompile group: 'org.json', name: 'json', version: '20180813'

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile group: 'junit', name: 'junit', version: versions.junit
  smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured

}

mainClassName = 'uk.gov.hmcts.reform.sscscorbackend.Application'

bootJar {
  archiveName = 'sscs-cor-backend.jar'

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

project.tasks['sonarqube'].dependsOn test, integration
sonarqube {
    properties {
        property "sonar.projectName", "SSCS - COR backend"
        property "sonar.projectKey", "SSCSSCB"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
        property "sonar.exclusions", "**/SscsCorBackendException.java," +
                "src/main/java/uk/gov/hmcts/reform/sscscorbackend/service/ccd/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/sscscorbackend/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/sscscorbackend/service/idam/**"
    }
}

task buildAll {
  dependsOn 'build'
  dependsOn 'integration'
  tasks.findByName('integration').mustRunAfter 'build'
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
