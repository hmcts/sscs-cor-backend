# Example Kubernetes resource template
#
# All variables are replaced at deployment time with environment variables.
#
# The following variables are derived as follows by the pipeline. DO NOT CHANGE:
#
#   - NAMESPACE:    product
#   - SERVICE_NAME: product-component-branch
#   - IMAGE_NAME:   registry-name/hmcts/product-component:branch
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
        env:
        - name: IDAM_S2S_AUTH_TOTP_SECRET
          value: "${IDAM_S2S_AUTH_TOTP_SECRET}"
        - name: IDAM_SSCS_SYSTEMUPDATE_USER
          value: "${IDAM_SSCS_SYSTEMUPDATE_USER}"
        - name: IDAM_SSCS_SYSTEMUPDATE_PASSWORD
          value: "${IDAM_SSCS_SYSTEMUPDATE_PASSWORD}"
        - name: IDAM_OAUTH2_CLIENT_SECRET
          value: "${IDAM_OAUTH2_CLIENT_SECRET}"
        - name: EMAIL_SERVER_HOST
          value: "mta.reform.hmcts.net"
        - name: EMAIL_SERVER_PORT
          value: "25"
        - name: PDF_SERVICE_ACCESS_KEY
          value: "${PDF_SERVICE_ACCESS_KEY}"

        envFrom:
          - configMapRef:
              name: ${SERVICE_NAME}-config
 
        # These may be adjusted, but be mindful please
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1024Mi"
            cpu: "2500m"
 
        # This is the port your process is listening on in the container
        ports:
        - containerPort: 8090
          name: http
        imagePullPolicy: Always
---
#
# Service
#
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8090
  selector:
    app: ${SERVICE_NAME}
---
#
# Ingress
#
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80